sapply(1:294,function(i)
list(id=point[i,],
gContains(ne,SpatialPoints(point[i,1:2],proj4string=CRS(proj4string(ne))))))
massp <- sapply(1:294,function(i)
list(id=point[i,],
gContains(ne,SpatialPoints(point[i,1:2],proj4string=CRS(proj4string(ne))))))
massp
typeof(massp)
length(massp) != FALSE
massp
length(massp) != "FALSE"
typeof(massp)
matrix(massp)
typeof(massp)
massp
massp[FALSE]
massp["FALSE"]
view(massp)
View(massp)
REUdata[,"2"] == 'TRUE'
massp[,"2"]
massp[,2]
massp[,1:249] == 'TRUE'
massp
massp("FALSE")
massp["FALSE"]
length(massp[massp==TRUE])
massp$id
massp$List2
all(massp, na.rm = TRUE)
typeof(massp)
length(massp)
massp <- sapply(1:294,function(i)
list(point[i,],
gContains(ne,SpatialPoints(point[i,1:2],proj4string=CRS(proj4string(ne))))))
length(massp)
MA.points <- sapply(1:294,function(i)
list(point[i,],
gContains(ne,SpatialPoints(point[i,1:2],proj4string=CRS(proj4string(ne))))))
MA.points
us <- getData("GADM", country="USA", level=1)
# extract states (need to uppercase everything)
nestates <- c("Massachusetts")
ne = us[match(toupper(nestates),toupper(us$NAME_1)),]
plot(ne)
point <- data.frame(gsp)
sp2   <- SpatialPoints(point,proj4string=CRS(proj4string(ne)))
gsp <- gspecies
prespoints <- read.csv('http://harvardforest.fas.harvard.edu/data/p14/hf147/hf147-13-antData_use4R_snappedToClim.csv')
if (gspecies == ''){gspecies <- "aphrud"}
gspecies <- ''
prespoints <- read.csv('http://harvardforest.fas.harvard.edu/data/p14/hf147/hf147-13-antData_use4R_snappedToClim.csv')
if (gspecies == ''){gspecies <- "aphrud"}
colnames(prespoints) = c("spcode", "lon","lat")
gspecies <- prespoints[grep(gspecies,as.character(prespoints$spcode)),]
gspecies$spcode <- NULL
if (identical(colnames(gspecies),c( "lat", "lon"))){gspecies <- gspecies[,c('lon','lat')]}
if (is.matrix(gspecies) == FALSE){gspecies <- data.matrix(gspecies)}
gsp <- gspecies
us <- getData("GADM", country="USA", level=1)
# extract states (need to uppercase everything)
nestates <- c("Massachusetts")
ne = us[match(toupper(nestates),toupper(us$NAME_1)),]
plot(ne)
point <- data.frame(gsp)
sp2   <- SpatialPoints(point,proj4string=CRS(proj4string(ne)))
MA.points <- sapply(1:294,function(i)
list(point[i,],
gContains(ne,SpatialPoints(point[i,1:2],proj4string=CRS(proj4string(ne))))))
MA.points
MA.points[-1,]
massp <-MA.points[-1,]
massp
all(massp, na.rm = FALSE)
which(massp, arr.ind = TRUE)
View(massp)
as.matrix(massp)
which(massp, arr.ind = TRUE)
MA  <- as.matrix(massp)
which(MA, arr.ind = TRUE)
MA[1,] == 'TRUE'
MA[1:294,] == 'TRUE'
MA
?whcih
?which
?all
all(MA, na.rm = TRUE)
typeof(MA)
MA  <- as.matrix(massp)
is.matrix(MA.points)
MA.points
MA
is.matrix(MA)
typeof(MA)
MA[TRUE,]
select <- matrix(MA, ncol = 2, byrow = TRUE)
select
select <- matrix(MA, ncol = 1, byrow = TRUE)
select
View(select)
which(select, arr.ind = TRUE)
which(select[,V1], arr.ind = TRUE)
?rowSums
m[(m[,1]) != TRUE,]
select
select[,1])
select[,1]
m[(select[,1]) != TRUE,]
select[(select[,1])]
(select[,1]) != TRUE
select
typeof(select)
massp
massp[[294]][[1]]
length(massp)
print(massp[[i]][[1]])
massp[[i]][[1]]
massp[[1]][[1]]
print(massp[[1]][[1]])
for (i in 1:length(massp){if(massp[[i]][[1]] == "TRUE")(print(massp[[i]][[1]]))}
for (i in 1:length(massp){if(massp[[i]][[1]] == "TRUE"){(print(massp[[i]][[1]]))}}
for (i in 1:length(massp){if(massp[[i]][[1]] == "TRUE"){(print(massp[[i]][[1]]))}
for (i in 1:length(massp){if(massp[[i]][[1]] == "TRUE"),(print(massp[[i]][[1]]))}
names(select)
select
typeof(select)
select[[1]]
MA  <- as.matrix(massp)
MA
select <- matrix(MA, ncol = 1, byrow = TRUE)
select
View(MA)
colnames(MA)
colnames(MA)  <- c(num, logical)
colnames(MA)  <- c("num", "logical")
write.csv(MA, file = "/Users/annacalderon/Desktop/mass.csv")
read.csv(MA, file = "/Users/annacalderon/Desktop/mass.csv")
read.csv(file = "/Users/annacalderon/Desktop/mass.csv")
Only.mass <- read.csv(file = "/Users/annacalderon/Desktop/mass.csv")
typeof(Only.mass)
View(Only.mass)
MASSACH <- Only.mass[-1,]
MASSACH
points(MASSACH)
points(MASSACH, col="red", pch=20, cex=0.5)
MA  <- 'Massachusetts'
us[us$NAME_1 %in% MA,]
Mass <- us[us$NAME_1 %in% MA,]
plot(Mass)
ne
plot(ne)
us <- getData("GADM", country="USA", level=1)
# extract states (need to uppercase everything)
nestates <- c("Massachusetts")
ne = us[match(toupper(nestates),toupper(us$NAME_1)),]
plot(ne)
point <- data.frame(gsp)
sp2   <- SpatialPoints(point,proj4string=CRS(proj4string(ne)))
MA.points <- sapply(1:294,function(i)
list(point[i,],
gContains(ne,SpatialPoints(point[i,1:2],proj4string=CRS(proj4string(ne))))))
MA.points
massp <-MA.points[-1,]
massp
MA  <- as.matrix(-MA.points[-1,])
MA  <- as.matrix(MA.points[-1,])
MA
points(MA)
SpatialPoints(MA)
Ma <- 'Massachusetts'
Mass <- us[us$NAME_1 %in% Ma,]
plot(Mass)
plot(Mass)
Mass
us <- getData("GADM", country="USA", level=1)
# extract states (need to uppercase everything)
nestates <- c("Massachusetts")
ne = us[match(toupper(nestates),toupper(us$NAME_1)),]
plot(ne)
us <- getData("GADM", country="USA", level=1)
# extract states (need to uppercase everything)
nestates <- c("Massachusetts")
MA = us[match(toupper(nestates),toupper(us$NAME_1)),]
plot(MA)
gspecies <- ''
prespoints <- read.csv('http://harvardforest.fas.harvard.edu/data/p14/hf147/hf147-13-antData_use4R_snappedToClim.csv')
if (gspecies == ''){gspecies <- "aphrud"}
colnames(prespoints) = c("spcode", "lon","lat")
gspecies <- prespoints[grep(gspecies,as.character(prespoints$spcode)),]
gspecies$spcode <- NULL
gspecies <- read.csv('../data/gspecies.csv')
if (identical(colnames(gspecies),c( "lat", "lon"))){gspecies <- gspecies[,c('lon','lat')]}
if (is.matrix(gspecies) == FALSE){gspecies <- data.matrix(gspecies)}
### Getting state data
gsp <- gspecies
point <- data.frame(gsp)
sp2   <- SpatialPoints(point,proj4string=CRS(proj4string(MA)))
sp2   <- SpatialPoints(point,proj4string=CRS(proj4string(MA)))
MA.points <- sapply(1:294,function(i)
list(point[i,],
gContains(ne,SpatialPoints(point[i,1:2],proj4string=CRS(proj4string(ne))))))
MA.points <- sapply(1:294,function(i)
list(point[i,],
gContains(MA,SpatialPoints(point[i,1:2],proj4string=CRS(proj4string(MA))))))
MA.points
MA  <- as.matrix(MA.points[-1,])
MA
?getData
MA[[294]]
gsp
gsp[[292]]
gsp[[292,]]
typeof(gsp)
gsp[292,]
gsp[290:291,]
gsp[c(290,291,292,293),]
dummy  <- subset(gsp[c(290,291,292,293),])
dummy
rm(dummy)
MA[[279]]
mass.data  <- subset(gsp[c(1,2,3,12
,15
,16
,23
,24
,25
,26
,27
,28
,29
,30
, 31
, 32
, 33
, 34
, 35
, 39
, 40
, 41
, 42
, 43
, 44
, 45
, 46
, 47
, 48
, 49
, 50
, 51
, 52
, 53
, 54
, 55
, 56
, 57
, 58
, 59
, 61
, 62
, 63
, 64
, 65
, 66
, 67
, 68
, 69
, 70
, 71
, 72
, 73
, 74
, 75
, 76
, 77
, 78
, 79
, 80
, 81
, 82
, 83
, 84
, 85
, 86
, 116
, 117
, 118
, 119
, 120
, 121
, 122
, 124
, 125
, 126
, 127
, 128
, 129
, 130
, 131
, 132
, 133
, 134
, 135
, 136
, 137
, 138
, 139
, 140
, 141
, 142
, 143
, 144
, 145
, 146
, 147
, 148
, 149
, 150
, 151
, 152
, 153
, 154
, 155
, 156
, 157
, 158
, 159
, 160
, 161
, 162
, 163
, 164
, 165
, 166
, 167
, 168
, 169
, 170
, 172
, 173
, 175
, 176
, 177
, 179
, 180
, 182
, 183
, 184
, 186
, 187
, 188
, 189
, 191
, 203
, 204
, 205
, 206
, 207
, 208
, 210
, 213
, 216
, 217
, 218
, 221
, 222
, 250
, 251
, 252
, 253
, 257
, 258
, 259
, 260
, 261
, 264
, 265
, 266
, 267
, 268
, 269
, 270
, 271
, 272
, 273
, 274
, 277
, 279
, 280
, 281
, 282
, 283
, 284
, 285
, 286
, 287
, 288
, 289
, 290
, 292),])
mass.data
points(mass.data, col="black", pch=20, cex=0.5)
typeof(mass.data)
mass.data[,"lat"]
subset(mass.data, mass.data[,"lon"] >= -70.860284)
mass.lon <- subset(mass.data, mass.data[,"lon"] >= -70.860284)
mass.lat <- subset(mass.lon, mass.data[,"lat"] >= 41.487284)
mass.lat <- subset(mass.lon, mass.data[,"lat"] <= 41.487284)
mass.lon
mass.lon[,"lat"]
mass.lat <- subset(mass.lon, mass.lon[,"lat"] <= 41.487284)
mass.lat
points(mass.data, col="red", pch=20, cex=0.5)
plot(MA)
us <- getData("GADM", country="USA", level=1)
# extract states (need to uppercase everything)
nestates <- c("Massachusetts")
MA = us[match(toupper(nestates),toupper(us$NAME_1)),]
plot(MA)
points(mass.lat, col="red", pch=20, cex=0.5)
max(mass.lat[,"lat"])
mar.vin <- mass.lat[-7, ]
mar.vin
plot(MA)
points(mar.vin, col="pink", cex=0.5, pch=20)
write.csv(mar.vin, file = "/Users/annacalderon/Desktop/gENM/data/marthas_vineyard.csv")
MVin.points <- read.csv(file = "/Users/annacalderon/Desktop/gENM/data/marthas_vineyard.csv")
MVin.points
colnames(MVin.points)
MVin.points$X <- NULL
MVin.points
typeof(MVin.points)
if (is.matrix(MVin.points) == FALSE){MVin.points <- data.matrix(MVin.points)}
typeof(MVin.points)
gspecies <- ''
prespoints <- read.csv('http://harvardforest.fas.harvard.edu/data/p14/hf147/hf147-13-antData_use4R_snappedToClim.csv')
if (gspecies == ''){gspecies <- "aphrud"}
colnames(prespoints) = c("spcode", "lon","lat")
gspecies <- prespoints[grep(gspecies,as.character(prespoints$spcode)),]
gspecies$spcode <- NULL
gspecies <- read.csv('../data/gspecies.csv')
if (identical(colnames(gspecies),c( "lat", "lon"))){gspecies <- gspecies[,c('lon','lat')]}
if (is.matrix(gspecies) == FALSE){gspecies <- data.matrix(gspecies)}
### Getting state data
gsp <- gspecies
us <- getData("GADM", country="USA", level=1)
# extract states (need to uppercase everything)
nestates <- c("Massachusetts")
MA = us[match(toupper(nestates),toupper(us$NAME_1)),]
plot(MA)
point <- data.frame(gsp)
MA.points <- sapply(1:294,function(i)
list(point[i,],
gContains(MA,SpatialPoints(point[i,1:2],proj4string=CRS(proj4string(MA))))))
# this piece of code will tell you what points
# are contained within Massachusetss
MA  <- as.matrix(MA.points[-1,])
MVin.points <- read.csv(file = "/Users/annacalderon/Desktop/gENM/data/marthas_vineyard.csv")
MVin.points$X <- NULL
points(MVin.points, col="red", cex=0.5, pch=20)
if (is.matrix(MVin.points) == FALSE){MVin.points <- data.matrix(MVin.points)}
MV.points
MVin.points
wd <- '/Users/annacalderon/Desktop/gENM/src'
setwd(wd)
require(raster)
library(FedData)
gspecies <- ''
prespoints <- read.csv('http://harvardforest.fas.harvard.edu/data/p14/hf147/hf147-13-antData_use4R_snappedToClim.csv')
if (gspecies == ''){gspecies <- "aphrud"}
colnames(prespoints) = c("spcode", "lon","lat")
gspecies <- prespoints[grep(gspecies,as.character(prespoints$spcode)),]
gspecies$spcode <- NULL
gspecies <- read.csv('../data/gspecies.csv')
gspecies <- ''
prespoints <- read.csv('http://harvardforest.fas.harvard.edu/data/p14/hf147/hf147-13-antData_use4R_snappedToClim.csv')
if (gspecies == ''){gspecies <- "aphrud"}
colnames(prespoints) = c("spcode", "lon","lat")
gspecies <- prespoints[grep(gspecies,as.character(prespoints$spcode)),]
gspecies$spcode <- NULL
#gspecies <- read.csv('../data/gspecies.csv')
if (identical(colnames(gspecies),c( "lat", "lon"))){gspecies <- gspecies[,c('lon','lat')]}
if (is.matrix(gspecies) == FALSE){gspecies <- data.matrix(gspecies)}
### Getting state data
gsp <- gspecies
us <- getData('GADM',country='usa',level=1)
ne <- c('Connecticut','Maine','Massachusetts','New Hampshire','Rhode Island','Vermont')
keep <- c('Maine','Connecticut','Rhode Island')
dont <- c('Massachusetts','New Hampshire','Vermont')
newengland <- us[us$NAME_1 %in% ne,]
ne.keep <- newengland[newengland$NAME_1 %in% keep,]
plot(ne.keep)
us <- getData("GADM", country="USA", level=1)
# extract states (need to uppercase everything)
nestates <- c("Massachusetts")
MA = us[match(toupper(nestates),toupper(us$NAME_1)),]
plot(MA)
point <- data.frame(gsp)
MA.points <- sapply(1:294,function(i)
list(point[i,],
gContains(MA,SpatialPoints(point[i,1:2],proj4string=CRS(proj4string(MA))))))
# this piece of code will tell you what points
# are contained within Massachusetss
MA  <- as.matrix(MA.points[-1,])
MA
plot(ne.keep)
MVin.points <- read.csv(file = "/Users/annacalderon/Desktop/gENM/data/marthas_vineyard.csv")
MVin.points$X <- NULL
if (is.matrix(MVin.points) == FALSE){MVin.points <- data.matrix(MVin.points)}
points(MVin.points, col="red", cex=0.5, pch=20)
MVin.points
nan.mart <- ( c( -70.62917, -70.63000, -70.63750, -70.73750, -70.79583, -70.65000),
nan.mart <- c((-70.62917, -70.63000, -70.63750, -70.73750, -70.79583, -70.65000),
