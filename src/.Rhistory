text(x=-93, y=38 , "Missouri", col="black", cex=.3)
text(x=-92, y= 35, "Arkansas", col="black", cex=.3)
text(x=-89, y=33 , "Mississippi", col="black", cex=.3)
text(x=-86, y= 32, "Alabama", col="black", cex=.3)
text(x=-83, y= 33, "Gerogia", col="black", cex=.3)
text(x=-81, y=27 , "Florida", col="black", cex=.3)
text(x=-86, y=35, "Tennessee", col="black", cex=.3)
text(x=-85, y=37.5 , "Kentucky", col="black", cex=.3)
text(x=-89, y=40 , "Illinois", col="black", cex=.3)
text(x=-89.5, y=44 , "Wisconsin", col="black", cex=.3)
text(x=-85, y= 43.5, "Michigan", col="black", cex=.3)
text(x=-86, y=40 , "Indiana", col="black", cex=.3)
text(x=-83, y=40 , "Ohio", col="black", cex=.3)
text(x=-87, y=36 , "Tennessee", col="black", cex=.3)
text(x=-81, y=38 , "West Virginia", col="black", cex=.3)
text(x=-78, y=41 , "Pennsylvania", col="black", cex=.3)
text(x=-75, y=43 , "New York", col="black", cex=.3)
text(x=-79, y=37, "Virginia", col="black", cex=.3)
text(x=-78, y=35 , "North Carolina", col="black", cex=.3)
text(x=-80, y= 34, "South Carolina", col="black", cex=.3)
text(x=-92, y=31 , "Louisiana", col="black", cex=.3)
text(x=-69, y=45 , "Maine", col="black", cex=.3)
text(x=-73, y=44, "VT", col="black", cex=.3)
text(x=-72, y=43.6 , "NH", col="black", cex=.3)
text(x=-72, y= 42.2, "MA", col="black", cex=.3)
text(x=-72, y= 41.7, "CN", col="black", cex=.3)
text(x=-74.5, y= 40, "NJ", col="black", cex=.3)
#the pseudo-absence points
points(bg,col="snow",pch=1,cex=0.2)
# and the presence points
points(Apicea$lon, Apicea$lat, col="darkgreen", pch=20, cex=0.5)
# add axes
axis(1,las=1)
axis(2,las=1)
box()
BClim = brick("/Users/annacalderon/Desktop/gENM/data/data.grd")
BClim = crop(BClim, YbrevRange)
#Now you can start plotting your data! YEYYYYYYYY.
#########################ANNUAL MEAN TEMPERATURE (C X 10)#####################################
# this format plots the first (of 19) variables stored in BClim; change the 1 to 2-19 for the others
plot(BClim, 1, cex=0.5, legend=T, mar=par("mar"), xaxt="n", yaxt="n", main="Annual mean temperature (ÂºC x 10)")
map("state", xlim=c(-99.2,-63), ylim=c(23.6,45.5), fill=F, col="honeydew", add=T)
# state names
text(x=-99.06, y=31.72, "Texas", col="black", cex=.3)
text(x=-97.06, y=35.02, "Oklahoma", col="black", cex=.3)
text(x=-97.7, y=38, "Texas", col="black", cex=.3)
text(x=-98, y=41 , "Nebraska", col="black", cex=.3)
text(x=-99, y=44 , "South Dakota", col="black", cex=.3)
text(x=-100, y=47 , "North Dakota", col="black", cex=.3)
text(x=-94, y=46 , "Minnesota", col="black", cex=.3)
text(x=-93, y=42 , "Iowa", col="black", cex=.3)
text(x=-93, y=38 , "Missouri", col="black", cex=.3)
text(x=-92, y= 35, "Arkansas", col="black", cex=.3)
text(x=-89, y=33 , "Mississippi", col="black", cex=.3)
text(x=-86, y= 32, "Alabama", col="black", cex=.3)
text(x=-81, y=27 , "Florida", col="black", cex=.3)
text(x=-83, y= 33, "Gerogia", col="black", cex=.3)
text(x=-86, y=35, "Tennessee", col="black", cex=.3)
text(x=-85, y=37.5 , "Kentucky", col="black", cex=.3)
text(x=-89, y=40 , "Illinois", col="black", cex=.3)
text(x=-89.5, y=44 , "Wisconsin", col="black", cex=.3)
text(x=-85, y= 43.5, "Michigan", col="black", cex=.3)
text(x=-86, y=40 , "Indiana", col="black", cex=.3)
text(x=-83, y=40 , "Ohio", col="black", cex=.3)
text(x=-87, y=36 , "Tennessee", col="black", cex=.3)
text(x=-81, y=38 , "West Virginia", col="black", cex=.3)
text(x=-78, y=41 , "Pennsylvania", col="black", cex=.3)
text(x=-75, y=43 , "New York", col="black", cex=.3)
text(x=-79, y=37, "Virginia", col="black", cex=.3)
text(x=-80, y= 34, "South Carolina", col="black", cex=.3)
text(x=-92, y=31 , "Louisiana", col="black", cex=.3)
text(x=-78, y=35 , "North Carolina", col="black", cex=.3)
text(x=-69, y=45 , "Maine", col="black", cex=.3)
text(x=-73, y=44, "VT", col="black", cex=.3)
text(x=-72, y= 42.2, "MA", col="black", cex=.3)
text(x=-72, y=43.6 , "NH", col="black", cex=.3)
text(x=-72, y= 41.7, "CN", col="black", cex=.3)
text(x=-74.5, y= 40, "NJ", col="black", cex=.3)
# plot the presence points
points(Apicea$lon, Apicea$lat, col="darkolivegreen4", pch=20, cex=0.5)
#...annnnddd...your pseudo-absence points. yus.
points(bg,col="snow",pch=1,cex=0.2)
# add axes
axis(1,las=1)
axis(2,las=1)
#and a box
box()
#################################PULLING BIOCLIM VALUE######################################
##################################????????????????????######################################
# for the subsampled presence points
Ybrev_bc = extract(BClim, subs[,c("lon","lat")])
data(stateMapEnv)
plot(c(-99.2, -63), c(23.6, 45.5), mar=par("mar"), xlab="longitude", ylab="latitude", xaxt="n", yaxt="n", type="n", main="Joshua tree presence data")
rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4], col="lightcyan")
map("state", xlim=c(-99.2, -63), ylim=c(23.6, 45.5), fill=T, col="honeydew", add=T)
na.omit(Apicea_raw[,c('lat','lon')])
statelabels<-function {text(x=-99.06, y=31.72, "Texas", col="black", cex=.3), text(x=-97.06, y=35.02, "Oklahoma", col="black", cex=.3)
text(x=-97.7, y=38, "Texas", col="black", cex=.3)
text(x=-98, y=41 , "Nebraska", col="black", cex=.3)
text(x=-99, y=44 , "South Dakota", col="black", cex=.3)
text(x=-100, y=47 , "North Dakota", col="black", cex=.3)
text(x=-94, y=46 , "Minnesota", col="black", cex=.3)
text(x=-93, y=42 , "Iowa", col="black", cex=.3)
text(x=-93, y=38 , "Missouri", col="black", cex=.3)
text(x=-92, y= 35, "Arkansas", col="black", cex=.3)
text(x=-89, y=33 , "Mississippi", col="black", cex=.3)
text(x=-86, y= 32, "Alabama", col="black", cex=.3)
text(x=-83, y= 33, "Gerogia", col="black", cex=.3)
text(x=-81, y=27 , "Florida", col="black", cex=.3)
text(x=-86, y=35, "Tennessee", col="black", cex=.3)
text(x=-85, y=37.5 , "Kentucky", col="black", cex=.3)
text(x=-89, y=40 , "Illinois", col="black", cex=.3)
text(x=-89.5, y=44 , "Wisconsin", col="black", cex=.3)
text(x=-85, y= 43.5, "Michigan", col="black", cex=.3)
text(x=-86, y=40 , "Indiana", col="black", cex=.3)
text(x=-83, y=40 , "Ohio", col="black", cex=.3)
text(x=-87, y=36 , "Tennessee", col="black", cex=.3)
text(x=-81, y=38 , "West Virginia", col="black", cex=.3)
text(x=-78, y=41 , "Pennsylvania", col="black", cex=.3)
text(x=-75, y=43 , "New York", col="black", cex=.3)
text(x=-79, y=37, "Virginia", col="black", cex=.3)
text(x=-78, y=35 , "North Carolina", col="black", cex=.3)
text(x=-80, y= 34, "South Carolina", col="black", cex=.3)
text(x=-92, y=31 , "Louisiana", col="black", cex=.3)
text(x=-69, y=45 , "Maine", col="black", cex=.3)
text(x=-73, y=44, "VT", col="black", cex=.3)
text(x=-72, y=43.6 , "NH", col="black", cex=.3)
text(x=-72, y= 42.2, "MA", col="black", cex=.3)
text(x=-72, y= 41.7, "CN", col="black", cex=.3)
text(x=-74.5, y= 40, "NJ", col="black", cex=.3)}
bg = spsample(x@polygons, 1000, type='random', iter=1000)
x=circles(subs[,c("lon","lat")], d=50000, lonlat=T)
require(raster)
BClim = getData("worldclim", var="bio", res=2.5, path="/Users/annacalderon/Desktop/gENM/data")
wd <- '/Users/annacalderon/Desktop/trun/' # default is the current working directory
## 2. choose the species
genus <- ''
species <- ''
## 3. Select a window for the range
leftlon <- ''
rightlon <- ''
lowerlat <- ''
upperlat <- ''
## 4. Define filename and file paths
path <- ("") #data folder path
if (path == ""){path <- "../data"}
filename <- ("GspeciesBC_2.5.grd")
paste(path,filename, sep="/")
croppeddata<- paste(path,filename, sep="/")
## 5. Landscape resistance
## 6. Genetic distance
## 7. Genetic clusters
##############################     Setting your work station    #############################
setwd(wd)
packs<-c("rgbif","mapproj","mapdata","sp","maptools","dismo","rJava","rgdal")
## Load package dependencies
if (!require("pacman")){install.packages("pacman")}
library(pacman)
pacman::p_load(packs)
lapply(packs, require, character.only = TRUE)
###################################    SETTING UP YOUR DATA      ##############################
if (leftlon == ''){leftlon <- -99.2}
if (rightlon == ''){rightlon <- -63}
if (lowerlat == ''){lowerlat <- 23.6}
if (upperlat == ''){upperlat <- 45.5}
if (genus == ''){genus <- 'Aphaenogaster';species <- 'picea'}
rawdata <- gbif(genus = genus, species = species)
rawdata[,c('lat','lon')]
na.omit(rawdata[,c('lat','lon')])
if (genus == ''){genus <- 'Aphaenogaster';species <- 'picea'}
rawdata <- gbif(genus = genus, species = species)
na.omit(rawdata[,c('lat','lon')])
Gspecies <- na.omit(rawdata[,c('lat','lon')])
data(stateMapEnv)
######################    PLOTTING PRESENCE AND ABSENCE POINTS  ############################
plot(c(leftlon, rightlon), c(lowerlat, upperlat), mar=par("mar"), xlab="longitude",
ylab="latitude", xaxt="n", yaxt="n", type="n", main="Presence and Absence Points")
rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4], col="lightcyan")
map("state", xlim=c(leftlon, rightlon), ylim=c(lowerlat, upperlat), fill=T, col="honeydew", add=T)
# plot the points
points(Gspecies$lon, Gspecies$lat, col="darkolivegreen4", pch=20, cex=0.5)
axis(1,las=1)
axis(2,las=1)
box()
# create sequences of latitude and longitude values to define the grid
longrid = seq(leftlon, rightlon,0.05)
latgrid = seq(lowerlat, upperlat,0.05)
# identify points within each grid cell, draw one at random
subs = c()
for(i in 1:(length(longrid)-1)){
for(j in 1:(length(latgrid)-1)){
gridsq = subset(Gspecies, lat > latgrid[j] & lat < latgrid[j+1] & lon > longrid[i] & lon < longrid[i+1])
if(dim(gridsq)[1]>0){
subs = rbind(subs, gridsq[sample(1:dim(gridsq)[1],1 ), ])
}
}
}
dim(subs)
x=circles(subs[,c("lon","lat")], d=50000, lonlat=T)
bg = spsample(x@polygons, 1000, type='random', iter=1000)
points(bg,col="khaki4",pch=1,cex=0.3)
################################    HANDLING CLIMATE DATA     #############################
require(raster)
BClim = getData("worldclim", var="bio", res=2.5, path="")
GspeciesRange = extent(leftlon, rightlon,lowerlat, upperlat)
BClim = crop(BClim, GspeciesRange)
writeRaster(BClim, filename=croppeddata, overwrite=T)
filename <- ("GspeciesBC_2.5.grd")
if (path == ""){path <- "../data"}
filename <- ("GspeciesBC_2.5.grd")
paste(path,filename, sep="/")
croppeddata<- paste(path,filename, sep="/")
GspeciesRange = extent(leftlon, rightlon,lowerlat, upperlat)
BClim = crop(BClim, GspeciesRange)
writeRaster(BClim, filename=croppeddata, overwrite=T)
croppeddata
rm(list=ls())
wd <- '/Users/annacalderon/Desktop/untitled folder/' # default is the current working directory
## 2. choose the species
genus <- ''
species <- ''
## 3. Select a window for the range
leftlon <- ''
rightlon <- ''
lowerlat <- ''
upperlat <- ''
## 4. Define filename and file paths
path <- ("") #data folder path
if (path == ""){path <- "../data"}
filename <- ("GspeciesBC_2.5.grd")
paste(path,filename, sep="/")
croppeddata<- paste(path,filename, sep="/")
## 5. Landscape resistance
## 6. Genetic distance
## 7. Genetic clusters
##############################     Setting your work station    #############################
setwd(wd)
packs<-c("rgbif","mapproj","mapdata","sp","maptools","dismo","rJava","rgdal")
## Load package dependencies
if (!require("pacman")){install.packages("pacman")}
library(pacman)
pacman::p_load(packs)
lapply(packs, require, character.only = TRUE)
###################################    SETTING UP YOUR DATA      ##############################
if (leftlon == ''){leftlon <- -99.2}
if (rightlon == ''){rightlon <- -63}
if (lowerlat == ''){lowerlat <- 23.6}
if (upperlat == ''){upperlat <- 45.5}
if (genus == ''){genus <- 'Aphaenogaster';species <- 'picea'}
rawdata <- gbif(genus = genus, species = species)
na.omit(rawdata[,c('lat','lon')])
Gspecies <- na.omit(rawdata[,c('lat','lon')])
data(stateMapEnv)
######################    PLOTTING PRESENCE AND ABSENCE POINTS  ############################
plot(c(leftlon, rightlon), c(lowerlat, upperlat), mar=par("mar"), xlab="longitude",
ylab="latitude", xaxt="n", yaxt="n", type="n", main="Presence and Absence Points")
rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4], col="lightcyan")
map("state", xlim=c(leftlon, rightlon), ylim=c(lowerlat, upperlat), fill=T, col="honeydew", add=T)
# plot the points
points(Gspecies$lon, Gspecies$lat, col="darkolivegreen4", pch=20, cex=0.5)
axis(1,las=1)
axis(2,las=1)
box()
# create sequences of latitude and longitude values to define the grid
longrid = seq(leftlon, rightlon,0.05)
latgrid = seq(lowerlat, upperlat,0.05)
# identify points within each grid cell, draw one at random
subs = c()
for(i in 1:(length(longrid)-1)){
for(j in 1:(length(latgrid)-1)){
gridsq = subset(Gspecies, lat > latgrid[j] & lat < latgrid[j+1] & lon > longrid[i] & lon < longrid[i+1])
if(dim(gridsq)[1]>0){
subs = rbind(subs, gridsq[sample(1:dim(gridsq)[1],1 ), ])
}
}
}
dim(subs)
x=circles(subs[,c("lon","lat")], d=50000, lonlat=T)
bg = spsample(x@polygons, 1000, type='random', iter=1000)
points(bg,col="khaki4",pch=1,cex=0.3)
################################    HANDLING CLIMATE DATA     #############################
require(raster)
BClim = getData("worldclim", var="bio", res=2.5, path="")
#crop data
GspeciesRange = extent(leftlon, rightlon,lowerlat, upperlat)
BClim = crop(BClim, GspeciesRange)
writeRaster(BClim, filename=croppeddata, overwrite=T)
wd <- '/Users/annacalderon/Desktop/untitled folder/data' # default is the current working directory
BClim = crop(BClim, GspeciesRange)
writeRaster(BClim, filename=croppeddata, overwrite=T)
path <- ("/Users/annacalderon/Desktop/untitled folder/data") #data folder path
GspeciesRange = extent(leftlon, rightlon,lowerlat, upperlat)
BClim = crop(BClim, GspeciesRange)
writeRaster(BClim, filename=croppeddata, overwrite=T)
### ENM using MaxEnt with GBIF and BioClim data
### A. Calderon and M.K. Lau
### 17June2016
### Inputs
## 1. working directory
wd <- '/Users/annacalderon/Desktop/untitled folder/data' # default is the current working directory
## 2. choose the species
genus <- ''
species <- ''
## 3. Select a window for the range
leftlon <- ''
rightlon <- ''
lowerlat <- ''
upperlat <- ''
## 4. Define filename and file paths
path <- ("/Users/annacalderon/Desktop/untitled folder/data") #data folder path
if (path == ""){path <- "../data"}
filename <- ("GspeciesBC_2.5.grd")
paste(path,filename, sep="/")
croppeddata<- paste(path,filename, sep="/")
## 5. Landscape resistance
## 6. Genetic distance
## 7. Genetic clusters
##############################     Setting your work station    #############################
setwd(wd)
packs<-c("rgbif","mapproj","mapdata","sp","maptools","dismo","rJava","rgdal")
## Load package dependencies
if (!require("pacman")){install.packages("pacman")}
library(pacman)
pacman::p_load(packs)
lapply(packs, require, character.only = TRUE)
###################################    SETTING UP YOUR DATA      ##############################
if (leftlon == ''){leftlon <- -99.2}
if (rightlon == ''){rightlon <- -63}
if (lowerlat == ''){lowerlat <- 23.6}
if (upperlat == ''){upperlat <- 45.5}
if (genus == ''){genus <- 'Aphaenogaster';species <- 'picea'}
rawdata <- gbif(genus = genus, species = species)
na.omit(rawdata[,c('lat','lon')])
Gspecies <- na.omit(rawdata[,c('lat','lon')])
data(stateMapEnv)
######################    PLOTTING PRESENCE AND ABSENCE POINTS  ############################
plot(c(leftlon, rightlon), c(lowerlat, upperlat), mar=par("mar"), xlab="longitude",
ylab="latitude", xaxt="n", yaxt="n", type="n", main="Presence and Absence Points")
rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4], col="lightcyan")
map("state", xlim=c(leftlon, rightlon), ylim=c(lowerlat, upperlat), fill=T, col="honeydew", add=T)
# plot the points
points(Gspecies$lon, Gspecies$lat, col="darkolivegreen4", pch=20, cex=0.5)
axis(1,las=1)
axis(2,las=1)
box()
# create sequences of latitude and longitude values to define the grid
longrid = seq(leftlon, rightlon,0.05)
latgrid = seq(lowerlat, upperlat,0.05)
# identify points within each grid cell, draw one at random
subs = c()
for(i in 1:(length(longrid)-1)){
for(j in 1:(length(latgrid)-1)){
gridsq = subset(Gspecies, lat > latgrid[j] & lat < latgrid[j+1] & lon > longrid[i] & lon < longrid[i+1])
if(dim(gridsq)[1]>0){
subs = rbind(subs, gridsq[sample(1:dim(gridsq)[1],1 ), ])
}
}
}
dim(subs)
x=circles(subs[,c("lon","lat")], d=50000, lonlat=T)
bg = spsample(x@polygons, 1000, type='random', iter=1000)
points(bg,col="khaki4",pch=1,cex=0.3)
################################    HANDLING CLIMATE DATA     #############################
require(raster)
#BClim = getData("worldclim", var="bio", res=2.5, path="")
GspeciesRange = extent(leftlon, rightlon,lowerlat, upperlat)
BClim = crop(BClim, GspeciesRange)
writeRaster(BClim, filename=croppeddata, overwrite=T)
BClim = brick(croppeddata)
#################################PULLING BIOCLIM VALUE######################################
##################################????????????????????######################################
Gspecies_bc = extract(BClim, subs[,c("lon","lat")])
bg_bc = extract(BClim, bg)
Gspecies_bc = data.frame(lon=subs$lon, lat=subs$lat, Gspecies_bc)
bgpoints = bg@coords
colnames(bgpoints) = c("lon","lat")
bg_bc = data.frame(cbind(bgpoints,bg_bc))
length(which(is.na(bg_bc$bio1)))
bg_bc = bg_bc[!is.na(bg_bc$bio1), ]
group_p = kfold(Ybrev_bc, 5)
group_p = kfold(Gspecies_bc, 5)
group_a = kfold(bg_bc, 5)
####################################  BUILDIG YOUR SDM  ############################################
test=3
train_p = Gspecies_bc[group_p!=test, c("lon","lat")]
train_a = bg_bc[group_a!=test, c("lon","lat")]
test_p = Gspecies_bc[group_p==test, c("lon","lat")]
test_a = bg_bc[group_a==test, c("lon","lat")]
me = maxent(BClim, p=train_p, a=train_a)
e = evaluate(test_p, test_a, me, BClim)
e
pred_me = predict(me, BClim)
plot(pred_me, 1, cex=0.5, legend=T, mar=par("mar"), xaxt="n", yaxt="n", main="Predicted Species Distribution")
map("state", xlim=c(leftlon,rightlon), ylim=c(lowerlat,upperlat), fill=F, col="black", add=T)
points(bg,col="snow",pch=1,cex=0.2)
points(Gspecies$lon, Gspecies$lat, col="darkgreen", pch=20, cex=0.5)
# add axes
axis(1,las=1)
axis(2,las=1)
setwd("/Users/annacalderon/Desktop/gENM/data")
wd
packs<-c("rgbif","mapproj","mapdata","sp","maptools","dismo","rJava","rgdal")
## Load package dependencies
if (!require("pacman")){install.packages("pacman")}
library(pacman)
pacman::p_load(packs)
packs<-c(rgbif,mapproj,mapdata,sp,maptools,dismo,rJava,rgdal)
?pacman
p_load(packs)
p_load("packs")
pacman: :p_load(packs)
things<-c("rgbif","mapproj","mapdata","sp","maptools","dismo","rJava","rgdal")
pacman::p_load(things)
pacman::p_load(packs, install = TRUE)
pacman::p_load(packs, char, install = TRUE)
pacman::p_load(packs, char, install = TRUE, character.only = TRUE)
lapply(packs, require, character.only = TRUE)
pacman::p_load(packs, install = TRUE, character.only = TRUE)
lapply(packs, require, character.only = TRUE)
p_load(packs, install = TRUE, character.only = TRUE)
rm(list=ls())
packs<-c("rgbif","mapproj","mapdata","sp","maptools","dismo","rJava","rgdal")
## Load package dependencies
if (!require("pacman")){install.packages("pacman")}
library(pacman)
pacman::p_load(packs, install = TRUE, character.only = TRUE)
lapply(packs, require, character.only = TRUE)
pacman::p_load(packs, character.only = TRUE)
lapply(packs, require, character.only = TRUE)
source("https://github.com/End-to-end-provenance/RDataTracker/tree/loadDDG")
source("https://github.com/End-to-end-provenance/RDataTracker/tree/loadDDG.git")
source("https://raw.github.com/End-to-end-provenance/RDataTracker/tree/loadDDG.git")
source("https://raw.github.com/End-to-end-provenance/RDataTracker/tree/loadDDG")
source_https("https://github.com/End-to-end-provenance/RDataTracker/tree/loadDDG")
source(https://github.com/End-to-end-provenance/RDataTracker/tree/loadDDG)
source(https:github.com/End-to-end-provenance/RDataTracker/tree/loadDDG)
source(https://github.com/End-to-end-provenance/RDataTracker/tree/loadDDG)
source(github.com/End-to-end-provenance/RDataTracker/tree/loadDDG)
source(https://github.com/End-to-end-provenance/RDataTracker/tree/loadDDG)
source(https:/github.com/End-to-end-provenance/RDataTracker/tree/loadDDG)
source("https://raw.github.com/End-to-end-provenance/RDataTracker/tree/loadDDG/RDataTracker.R")
source("https://github.com/End-to-end-provenance/RDataTracker/tree/loadDDG/RDataTracker.R")
setwd("~/Desktop/gENM/src")
source("https://github.com/End-to-end-provenance/RDataTracker/tree/loadDDG/RDataTracker.R")
ddg.run("SDM_template.R",laod = TRUE)
library(devtools\)
library(devtools)
source_url("https://github.com/End-to-end-provenance/RDataTracker/tree/loadDDG/RDataTracker.R")
source_url("https://github.com/End-to-end-provenance/RDataTracker.git/tree/loadDDG/RDataTracker.R")
source_url("https://github.com/End-to-end-provenance/RDataTracker.git/tree/loadDDG")
remove.packages("mapdata", lib="~/Library/R/3.2/library")
setwd(wd)
packs<-c("rgbif","mapproj","mapdata","sp","maptools","dismo","rJava","rgdal")
## Load package dependencies
if (!require("pacman")){install.packages("pacman")}
library(pacman)
pacman::p_load(packs)
install.packages("rgbif")
install.packages("rgbif")
install.packages("mapproj")
install.packages("mapdata")
install.packages("sp")
install.packages("maptools")
source("/Users/annacalderon/Desktop/gENM/src/RDataTracker.R")
setwd("~/Desktop/gENM/src")
ddg.run("SDM_template.R")
##-ddg-- Tue Jun 21 11:30:50 2016 ------##
ddg.run("SDM_template.R",laod = TRUE)
source("/Users/annacalderon/Desktop/gENM/src/RDataTracker.R")
ddg.run("SDM_template.R",laod = TRUE)
library("RDataTracker", lib.loc="~/Library/R/3.2/library")
source("/Users/annacalderon/Desktop/gENM/src/RDataTracker.R")
ddg.run("SDM_template.R",laod = TRUE)
setwd("~/Downloads/RDataTracker 2/R")
source("~/Downloads/RDataTracker 2/R")
ddg.run("SDM_template.R",laod = TRUE)
install.packages("sp")
source("/Users/annacalderon/Desktop/gENM/src/RDataTracker.R")
setwd("~/Desktop/gENM/src")
ddg.run("SDM_template.R",laod = TRUE)
library(RDataTracker)
source("/Users/annacalderon/Desktop/gENM/src/RDataTracker.R")
ddg.run("SDM_template.R",laod = TRUE)
detach("package:RDataTracker", unload=TRUE)
source("/Users/annacalderon/Desktop/gENM/src/RDataTracker.R")
ddg.run("SDM_template.R",laod = TRUE)
source("/Users/annacalderon/Desktop/gENM/src/RDataTracker.R")
ddg.run("SDM_template.R",laod = TRUE)
ddg.run("SDM_template.R",load = TRUE)
##-ddg-- Tue Jun 21 11:41:10 2016 ------##
install.packages("maptools")
source("/Users/annacalderon/Desktop/gENM/src/RDataTracker.R")
ddg.run("SDM_template.R",load = TRUE)
##-ddg-- Tue Jun 21 11:41:32 2016 ------##
source("/Users/annacalderon/Desktop/gENM/src/RDataTracker.R")
ddg.run("SDM_template.R",load = TRUE)
##-ddg-- Tue Jun 21 11:45:57 2016 ------##
source("/Users/annacalderon/Desktop/gENM/src/RDataTracker.R")
ddg.run("SDM_template.R",load = TRUE)
##-ddg-- Tue Jun 21 11:46:37 2016 ------##
source("/Users/annacalderon/Desktop/gENM/src/RDataTracker.R")
ddg.run("SDM_template.R",load = TRUE)
##-ddg-- Tue Jun 21 11:54:01 2016 ------##
source("/Users/annacalderon/Desktop/gENM/src/RDataTracker.R")
ddg.run("SDM_template.R",load = TRUE)
##-ddg-- Tue Jun 21 11:54:49 2016 ------##
source("/Users/annacalderon/Desktop/gENM/src/RDataTracker.R")
ddg.run("SDM_template.R",load = TRUE)
##-ddg-- Tue Jun 21 13:19:20 2016 ------##
source("/Users/annacalderon/Desktop/gENM/src/RDataTracker.R")
ddg.run("SDM_template.R",load = TRUE)
##-ddg-- Tue Jun 21 13:19:36 2016 ------##
