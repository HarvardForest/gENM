knife <- webprocess(email = 'acalderon@ucmerced.edu')
knife
knife <- webprocess(wait = TRUE)
knife
knife <- webprocess(algorithm = list('Area Grid Statistics (weighted)'=
"gov.usgs.cida.gdp.wps.algorithm.FeatureWeightedGridStatisticsAlgorithm"))
knife <- webprocess(email = 'acalderon@ucmerced.edu')
knife <- webprocess(wait = TRUE)
knife
knife <- webprocess(email = 'acalderon@ucmerced.edu')
knife
knife <- webprocess(algorithm = list('Area Grid Statistics (weighted)'=
"gov.usgs.cida.gdp.wps.algorithm.FeatureWeightedGridStatisticsAlgorithm"))
knife <- webprocess(wait = TRUE)
job <- geoknife(stencil, fabric, knife, wait = TRUE)
check(job)
stencil <- webgeom('state::Rhode Island, Massachusetts, Maine, Vermont, Connecticut, New Hampshire')
job <- geoknife(stencil, fabric, knife, wait = TRUE)
check(job)
job <- geoknife(stencil, fabric, knife, wait = TRUE, OUTPUT_TYPE="geotiff")
check(job)
download(job, destination = "/Users/annacalderon/Desktop/", overwrite=TRUE)
knife <- webprocess(algorithm = list('Area Grid Statistics (weighted)'=
"gov.usgs.cida.gdp.wps.algorithm.FeatureWeightedGridStatisticsAlgorithm"))
knife <- webprocess(email = 'acalderon@ucmerced.edu')
fabric <- webdata(url='dods://cida.usgs.gov/thredds/dodsC/macav2metdata_daily_future',
variable='tasmax_CSIRO-Mk3-6-0_r1i1p1_rcp85',times=c('2014-07-15','2014-07-18'))
stencil <- webgeom('state::Rhode Island, Massachusetts, Maine, Vermont, Connecticut, New Hampshire')
job <- geoknife(stencil, fabric, knife, wait = TRUE)
check(job)
knife <- webprocess(algorithm = list('Area Grid Statistics (weighted)'=
"gov.usgs.cida.gdp.wps.algorithm.FeatureWeightedGridStatisticsAlgorithm"))
knife <- webprocess(wait = TRUE)
fabric <- webdata(url='dods://cida.usgs.gov/thredds/dodsC/macav2metdata_daily_future',
variable='tasmax_CSIRO-Mk3-6-0_r1i1p1_rcp85',times=c('2014-07-15','2014-07-18'))
stencil <- webgeom('state::Rhode Island, Massachusetts, Maine, Vermont, Connecticut, New Hampshire')
job <- geoknife(stencil, fabric, knife, wait = TRUE)
download(job, destination = "/Users/annacalderon/Desktop/", overwrite=TRUE)
download(job, destination = "/Users/annacalderon/Desktop", overwrite=TRUE)
check(job)
geom(stencil) <- "derivative:CONUS_States"
attribute(stencil) <- "STATE"
values(stencil) <- c("Rhode Island", "Massachusetts", "Maine", "Vermont", "Connecticut", "New Hampshire")
stencil
geom(stencil) <- "sample:CONUS_Climate_Divisions""
geom(stencil) <- "sample:CONUS_Climate_Divisions")
geom(stencil) <- "sample:CONUS_Climate_Divisions"
attribute(stencil) <- "STATE"
values(stencil) <- c("Rhode Island", "Massachusetts", "Maine", "Vermont", "Connecticut", "New Hampshire")
job <- geoknife(stencil, fabric, knife, wait = TRUE)
check(job)
geom(stencil) <- "sample:CONUS_Climate_Divisions"
attribute(stencil) <- "STATE"
values(stencil) <- c("Rhode Island", "Massachusetts")
job <- geoknife(stencil, fabric, knife, wait = TRUE)
check(job)
geom(stencil) <- "sample:CONUS_Climate_Divisions"
attribute(stencil) <- "STATE"
values(stencil) <- c("Rhode Island", "Massachusetts", "Maine")
job <- geoknife(stencil, fabric, knife, wait = TRUE)
check(job)
geom(stencil) <- "sample:CONUS_Climate_Divisions"
attribute(stencil) <- "STATE"
values(stencil) <- c("Rhode Island", "Massachusetts", "Vermont", "Connecticut")
job <- geoknife(stencil, fabric, knife, wait = TRUE)
check(job)
values(stencil) <- c("Maine")
job <- geoknife(stencil, fabric, knife, wait = TRUE)
check(job)
geom(stencil) <- "sample:CONUS_Climate_Divisions")
attribute(stencil) <- "STATE"
values(stencil) <- c("Rhode Island", "Massachusetts", "Vermont", "Connecticut", "New Hampshire")
job <- geoknife(stencil, fabric, knife, wait = TRUE)
check(job)
data.out <- result(job, with.units=TRUE)
data.out
typeof(data.out)
knife <- webprocess(algorithm = list('OPeNDAP Subset'="gov.usgs.cida.gdp.wps.algorithm.FeatureCoverageOPeNDAPIntersectionAlgorithm"))
fabric <- webdata(url='dods://opendap.larc.nasa.gov/opendap/hyrax/SortByProduct/CERES/EBAF/Surface_Edition2.8/CERES_EBAF-Surface_Edition2.8_200003-201506.nc',
variable="sfc_sw_down_all_mon", #Surface Shortwave Flux Down, Monthly Means, All-Sky conditions
times=c('2014-07-15','2014-07-15'))
stencil <- simplegeom(data.frame('point1' = c(-5,32), 'point2' = c(-90,-78))) # big 'ol chunk 'o data
job <- geoknife(stencil, fabric, knife, wait = TRUE, OUTPUT_TYPE = "geotiff")
file <- download(job, destination = file.path(tempdir(), 'nasa_data.zip'), overwrite=TRUE)
job
file <- download(job, destination = file.path(tempdir(), 'nasa_data.zip'), overwrite=TRUE)
data.out <- result(job, with.units=TRUE)
job <- geoknife(stencil, fabric, knife, wait = TRUE)
library(geoknife)
knife <- webprocess(algorithm = list('Area Grid Statistics (weighted)'=
"gov.usgs.cida.gdp.wps.algorithm.FeatureWeightedGridStatisticsAlgorithm"))
knife <- webprocess(wait = TRUE)
fabric <- webdata(url='dods://cida.usgs.gov/thredds/dodsC/macav2metdata_daily_future',
variable='tasmax_CSIRO-Mk3-6-0_r1i1p1_rcp85',times=c('2014-07-15','2014-07-18'))
geom(stencil) <- "sample:CONUS_Climate_Divisions")
geom(stencil) <- "sample:CONUS_Climate_Divisions"
geom(stencil) <- "sample:CONUS_Climate_Divisions"
library(geoknife)
knife <- webprocess(algorithm = list('Area Grid Statistics (weighted)'=
"gov.usgs.cida.gdp.wps.algorithm.FeatureWeightedGridStatisticsAlgorithm"))
knife <- webprocess(wait = TRUE)
fabric <- webdata(url='dods://cida.usgs.gov/thredds/dodsC/macav2metdata_daily_future',
variable='tasmax_CSIRO-Mk3-6-0_r1i1p1_rcp85',times=c('2014-07-15','2014-07-18'))
geom(stencil) <- "sample:CONUS_Climate_Divisions"
attribute(stencil) <- "STATE"
values(stencil) <- c("Rhode Island", "Massachusetts", "Vermont", "Connecticut", "New Hampshire")
job <- geoknife(stencil, fabric, knife, wait = TRUE)
rm(list=ls())
library(geoknife)
knife <- webprocess(algorithm = list('Area Grid Statistics (weighted)'=
"gov.usgs.cida.gdp.wps.algorithm.FeatureWeightedGridStatisticsAlgorithm"))
knife <- webprocess(wait = TRUE)
fabric <- webdata(url='dods://cida.usgs.gov/thredds/dodsC/macav2metdata_daily_future',
variable='tasmax_CSIRO-Mk3-6-0_r1i1p1_rcp85',times=c('2014-07-15','2014-07-18'))
geom(stencil) <- "sample:CONUS_Climate_Divisions"
> library(raster)
str_name <- '/Users/annacalderon/Desktop/gENM/data/
library(raster)
library(raster)
str_name <- '/Users/annacalderon/Desktop/gENM/data/
cida.usgs.gov-thredds-dodsC-macav2metdata_daily_future-2099-07-01-00-00-00.tiff")
)
str_name <- '/Users/annacalderon/Desktop/gENM/data/
cida.usgs.gov-thredds-dodsC-macav2metdata_daily_future-2099-07-01-00-00-00.tiff')
str_name <- '/Users/annacalderon/Desktop/gENM/data/try.tiff"
str_name <- ('/Users/annacalderon/Desktop/gENM/data/try.tiff')
raster(str_name)
herewego <-raster(str_name)
plot(herewego)
install.packages("fuzzySim")
nstall.packages("fuzzySim", repos="http://R-Forge.R-project.org")
install.packages("fuzzySim", repos="http://R-Forge.R-project.org")
modOverlap <- function (pred1, pred2, na.rm = TRUE)
{
p1 <- pred1/sum(pred1, na.rm = na.rm)
p2 <- pred2/sum(pred2, na.rm = na.rm)
SchoenerD <- 1 - 0.5 * sum(abs(p1 - p2), na.rm = na.rm)
HellingerDist <- sqrt(sum((sqrt(p1) - sqrt(p2))^2, na.rm = na.rm))
WarrenI <- 1 - ((HellingerDist^2)/2)
list(SchoenerD = SchoenerD, WarrenI = WarrenI, HellingerDist = HellingerDist)
}
?FDR
library(fuzzySim)
?modOverlap
data(rotifers)
rotifers$spcode <- spCodes(rotifers$species, sep.species = "_", nchar.gen = 1, nchar.sp = 5, nchar.ssp = 0, sep.spcode = "")
View(rotifers$spcode)
rotifers$spcode
wd <- '/Users/annacalderon/Desktop/gENM/src'
setwd(wd)
source("helpers.R")
mintemp.2006  <- raster("../data/01_01_2006.tiff")
gsp <-read.csv("../data/RICTMEdukesnantucket.csv")
if (is.matrix(gsp) == FALSE){gsp <- data.matrix(gsp)}
clust <- gClust(x=gsp, vp=mintemp.2006)
out <- gENM(x=gsp, clust=clust, p=mintemp.2006))
out <- gENM(x=gsp, clust=clust, p=mintemp.2006)
out
plot([[1]]$pred)
plot(out[[1]]$pred)
jpeg(filename = "../results/gENM.jpeg", width = 1700, height = 1700,
units = "px", pointsize = 35, quality = 90,
bg="black")
par(oma=rep(0,4),omi=rep(0,4), bty = 'n',mar=rep(0.01,4),mai=rep(0,4))
plot(out[[1]]$pred)
yellow_blue <- c("black", colorRampPalette(c("black", "snow"))(10))
plot(out[[1]]$pred, axes=F, zlim=c(0, 1), col=yellow_blue,legend=T, box=F)
points(gsp, col="wheat1", cex=1.0,pch =19)
dev.off()
wd <- '/Users/annacalderon/Desktop/gENM/src'
setwd(wd)
source("helpers.R")
mintemp.2006  <- raster("../data/01_01_2006.tiff")
mintemp.2050 <- raster("../data/01_01_2050.tiff")
gsp <-read.csv("../data/RICTMEdukesnantucket.csv")
if (is.matrix(gsp) == FALSE){gsp <- data.matrix(gsp)}
clust <- gClust(x=gsp, vp=mintemp.2006)
out <- gENM(x=gsp, clust=clust, p=mintemp.2050)
jpeg(filename = "../results/gENM.jpeg", width = 1700, height = 1700,
units = "px", pointsize = 35, quality = 90,
bg="black")
par(oma=rep(0,4),omi=rep(0,4), bty = 'n',mar=rep(0.01,4),mai=rep(0,4))
plot(out[[1]]$pred)
yellow_blue <- c("black", colorRampPalette(c("black", "snow"))(10))
plot(out[[1]]$pred, axes=F, zlim=c(0, 1), col=yellow_blue,legend=T, box=F)
dev.off()
wd <- '/Users/annacalderon/Desktop/gENM/src'
setwd(wd)
source("helpers.R")
mintemp.2006  <- raster("../data/01_01_2006.tiff")
mintemp.2099 <- raster("../data/01_01_2099.tiff")
gsp <-read.csv("../data/RICTMEdukesnantucket.csv")
if (is.matrix(gsp) == FALSE){gsp <- data.matrix(gsp)}
clust <- gClust(x=gsp, vp=mintemp.2006)
out <- gENM(x=gsp, clust=clust, p=mintemp.2099)
jpeg(filename = "../results/gENM.jpeg", width = 1700, height = 1700,
units = "px", pointsize = 35, quality = 90,
bg="black")
par(oma=rep(0,4),omi=rep(0,4), bty = 'n',mar=rep(0.01,4),mai=rep(0,4))
plot(out[[1]]$pred)
yellow_blue <- c("black", colorRampPalette(c("black", "snow"))(10))
plot(out[[1]]$pred, axes=F, zlim=c(0, 1), col=yellow_blue,legend=T, box=F)
dev.off()
wd <- '/Users/annacalderon/Desktop/gENM/src'
setwd(wd)
source("helpers.R")
mintemp.2006  <- raster("../data/01_01_2006.tiff")
gsp <-read.csv("../data/RICTMEdukesnantucket.csv")
if (is.matrix(gsp) == FALSE){gsp <- data.matrix(gsp)}
clust <- gClust(x=gsp, vp=mintemp.2006)
out <- gENM(x=gsp, clust=clust, p=mintemp.2006)
jpeg(filename = "../results/gENM.jpeg", width = 1700, height = 1700,
units = "px", pointsize = 35, quality = 90,
bg="black")
par(oma=rep(0,4),omi=rep(0,4), bty = 'n',mar=rep(0.01,4),mai=rep(0,4))
plot(out[[1]]$pred)
yellow_blue <- c("black", colorRampPalette(c("black", "snow"))(10))
plot(out[[1]]$pred, axes=F, zlim=c(0, 1), col=yellow_blue,legend=T, box=F)
df.gsp <- data.frame(gsp)
groups <-  split(df.gsp, clust)
groups
groups$`1`
points(groups$`1`, col="lightskyblue1", cex=1.3,pch =19)
points(groups$`2`, col="greenyellow", cex=1.3,pch =19)
points(groups$`3`, col="pink2", cex=1.3,pch =19)
dev.off()
jpeg(filename = "../results/gENM.jpeg", width = 1700, height = 1700,
units = "px", pointsize = 35, quality = 90,
bg="black")
par(oma=rep(0,4),omi=rep(0,4), bty = 'n',mar=rep(0.01,4),mai=rep(0,4))
plot(out[[1]]$pred)
yellow_blue <- c("black", colorRampPalette(c("black", "snow"))(10))
plot(out[[1]]$pred, axes=F, zlim=c(0, 1), col=yellow_blue,legend=T, box=F)
df.gsp <- data.frame(gsp)
groups <-  split(df.gsp, clust)
points(groups$`1`, col="yellowgreen", cex=1.3,pch =19)
points(groups$`2`, col="pink2", cex=1.3,pch =19)
points(groups$`3`, col="lightskyblue1", cex=1.3,pch =19)
dev.off()
wd <- '/Users/annacalderon/Desktop/gENM/src'
setwd(wd)
source("helpers.R")
mintemp.2006  <- raster("../data/01_01_2006.tiff")
gsp <-read.csv("../data/RICTMEdukesnantucket.csv")
if (is.matrix(gsp) == FALSE){gsp <- data.matrix(gsp)}
clust <- gClust(x=gsp, vp=mintemp.2006)
out <- gENM(x=gsp, clust=clust, p=mintemp.2006)
jpeg(filename = "../results/gENM.jpeg", width = 1700, height = 1700,
units = "px", pointsize = 35, quality = 90,
bg="black")
par(oma=rep(0,4),omi=rep(0,4), bty = 'n',mar=rep(0.01,4),mai=rep(0,4))
plot(out[[1]]$pred)
yellow_blue <- c("black", colorRampPalette(c("black", "snow"))(10))
plot(out[[1]]$pred, axes=F, zlim=c(0, 1), col=yellow_blue,legend=T, box=F)
out
jpeg(filename = "../results/gENM.jpeg", width = 1700, height = 1700,
units = "px", pointsize = 35, quality = 90,
bg="black")
par(oma=rep(0,4),omi=rep(0,4), bty = 'n',mar=rep(0.01,4),mai=rep(0,4))
plot(out$`1`$pred)
yellow_blue <- c("black", colorRampPalette(c("black", "snow"))(10))
plot(out$`1`$pred, axes=F, zlim=c(0, 1), col=yellow_blue,legend=T, box=F)
dev.off()
plot(out$`1`$pred)
yellow_blue <- c("black", colorRampPalette(c("black", "snow"))(10))
plot(out$`1`$pred, axes=F, zlim=c(0, 1), col=yellow_blue,legend=T, box=F)
df.gsp <- data.frame(gsp)
groups <-  split(df.gsp, clust)
points(groups$`1`, col="yellowgreen", cex=1.3,pch =19)
points(groups$`2`, col="pink2", cex=1.3,pch =19)
points(groups$`3`, col="lightskyblue1", cex=1.3,pch =19)
dev.off()
jpeg(filename = "../results/gENM.jpeg", width = 1700, height = 1700,
units = "px", pointsize = 35, quality = 90,
bg="black")
par(oma=rep(0,4),omi=rep(0,4), bty = 'n',mar=rep(0.01,4),mai=rep(0,4))
plot(out$`1`$pred)
yellow_blue <- c("black", colorRampPalette(c("black", "snow"))(10))
plot(out$`1`$pred, axes=F, zlim=c(0, 1), col=yellow_blue,legend=T, box=F)
df.gsp <- data.frame(gsp)
groups <-  split(df.gsp, clust)
points(groups$`1`, col="yellowgreen", cex=1.3,pch =19)
dev.off()
jpeg(filename = "../results/gENM.jpeg", width = 1700, height = 1700,
units = "px", pointsize = 35, quality = 90,
bg="black")
par(oma=rep(0,4),omi=rep(0,4), bty = 'n',mar=rep(0.01,4),mai=rep(0,4))
plot(out$`2`$pred)
yellow_blue <- c("black", colorRampPalette(c("black", "snow"))(10))
plot(out$`2`$pred, axes=F, zlim=c(0, 1), col=yellow_blue,legend=T, box=F)
df.gsp <- data.frame(gsp)
groups <-  split(df.gsp, clust)
points(groups$`2`, col="pink2", cex=1.3,pch =19)
dev.off()
jpeg(filename = "../results/gENM.jpeg", width = 1700, height = 1700,
units = "px", pointsize = 35, quality = 90,
bg="black")
par(oma=rep(0,4),omi=rep(0,4), bty = 'n',mar=rep(0.01,4),mai=rep(0,4))
plot(out$`3`$pred)
yellow_blue <- c("black", colorRampPalette(c("black", "snow"))(10))
plot(out$`3`$pred, axes=F, zlim=c(0, 1), col=yellow_blue,legend=T, box=F)
df.gsp <- data.frame(gsp)
groups <-  split(df.gsp, clust)
points(groups$`3`, col="lightskyblue1", cex=1.3,pch =19)
dev.off()
wd <- '/Users/annacalderon/Desktop/gENM/src'
setwd(wd)
source("helpers.R")
mintemp.2006  <- raster("../data/01_01_2006.tiff")
mintemp.2050 <- raster("../data/01_01_2050.tiff")
gsp <-read.csv("../data/RICTMEdukesnantucket.csv")
if (is.matrix(gsp) == FALSE){gsp <- data.matrix(gsp)}
clust <- gClust(x=gsp, vp=mintemp.2006)
out <- gENM(x=gsp, clust=clust, p=mintemp.2050)
jpeg(filename = "../results/gENM.jpeg", width = 1700, height = 1700,
units = "px", pointsize = 35, quality = 90,
bg="black")
par(oma=rep(0,4),omi=rep(0,4), bty = 'n',mar=rep(0.01,4),mai=rep(0,4))
plot(out$`1`$pred)
yellow_blue <- c("black", colorRampPalette(c("black", "snow"))(10))
plot(out$`1`$pred, axes=F, zlim=c(0, 1), col=yellow_blue,legend=T, box=F)
dev.off()
jpeg(filename = "../results/gENM.jpeg", width = 1700, height = 1700,
units = "px", pointsize = 35, quality = 90,
bg="black")
par(oma=rep(0,4),omi=rep(0,4), bty = 'n',mar=rep(0.01,4),mai=rep(0,4))
plot(out$`2`$pred)
yellow_blue <- c("black", colorRampPalette(c("black", "snow"))(10))
plot(out$`2`$pred, axes=F, zlim=c(0, 1), col=yellow_blue,legend=T, box=F)
dev.off()
jpeg(filename = "../results/gENM.jpeg", width = 1700, height = 1700,
units = "px", pointsize = 35, quality = 90,
bg="black")
par(oma=rep(0,4),omi=rep(0,4), bty = 'n',mar=rep(0.01,4),mai=rep(0,4))
plot(out$`3`$pred)
yellow_blue <- c("black", colorRampPalette(c("black", "snow"))(10))
plot(out$`3`$pred, axes=F, zlim=c(0, 1), col=yellow_blue,legend=T, box=F)
dev.off()
wd <- '/Users/annacalderon/Desktop/gENM/src'
setwd(wd)
source("helpers.R")
mintemp.2006  <- raster("../data/01_01_2006.tiff")
mintemp.2099 <- raster("../data/01_01_2099.tiff")
gsp <-read.csv("../data/RICTMEdukesnantucket.csv")
if (is.matrix(gsp) == FALSE){gsp <- data.matrix(gsp)}
clust <- gClust(x=gsp, vp=mintemp.2006)
out <- gENM(x=gsp, clust=clust, p=mintemp.2099)
jpeg(filename = "../results/gENM.jpeg", width = 1700, height = 1700,
units = "px", pointsize = 35, quality = 90,
bg="black")
par(oma=rep(0,4),omi=rep(0,4), bty = 'n',mar=rep(0.01,4),mai=rep(0,4))
plot(out$`1`$pred)
yellow_blue <- c("black", colorRampPalette(c("black", "snow"))(10))
plot(out$`1`$pred, axes=F, zlim=c(0, 1), col=yellow_blue,legend=T, box=F)
dev.off()
jpeg(filename = "../results/gENM.jpeg", width = 1700, height = 1700,
units = "px", pointsize = 35, quality = 90,
bg="black")
par(oma=rep(0,4),omi=rep(0,4), bty = 'n',mar=rep(0.01,4),mai=rep(0,4))
plot(out$`2`$pred)
yellow_blue <- c("black", colorRampPalette(c("black", "snow"))(10))
plot(out$`2`$pred, axes=F, zlim=c(0, 1), col=yellow_blue,legend=T, box=F)
dev.off()
jpeg(filename = "../results/gENM.jpeg", width = 1700, height = 1700,
units = "px", pointsize = 35, quality = 90,
bg="black")
par(oma=rep(0,4),omi=rep(0,4), bty = 'n',mar=rep(0.01,4),mai=rep(0,4))
plot(out$`3`$pred)
yellow_blue <- c("black", colorRampPalette(c("black", "snow"))(10))
plot(out$`3`$pred, axes=F, zlim=c(0, 1), col=yellow_blue,legend=T, box=F)
dev.off()
mintemp.2050 <- raster("../data/01_01_2050.tiff")
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
source('~/Desktop/gENM/src/helpers.R')
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
source('~/Desktop/gENM/src/helpers.R')
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
source('~/Desktop/gENM/src/helpers.R')
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
source('~/Desktop/gENM/src/helpers.R')
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
source('~/Desktop/gENM/src/helpers.R')
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
source('~/Desktop/gENM/src/helpers.R')
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
source('~/Desktop/gENM/src/helpers.R')
source('~/Desktop/gENM/src/helpers.R')
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
source('~/Desktop/gENM/src/helpers.R')
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
source('~/Desktop/gENM/src/helpers.R')
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
source('~/Desktop/gENM/src/helpers.R')
mt.r <- extract(mintemp.2050,gsp)
r.c <- split(mt.r,clust)
mt.range <- do.call(rbind,lapply(r.c,range))
mt.range
range(gsp)
mt.r <- extract(mintemp.2006,gsp)
mt.r
range(mt.r)
source('~/Desktop/gENM/src/helpers.R')
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
source('~/Desktop/gENM/src/helpers.R')
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
source('~/Desktop/gENM/src/helpers.R')
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
source('~/Desktop/gENM/src/helpers.R')
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
source('~/Desktop/gENM/src/helpers.R')
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
source('~/Desktop/gENM/src/helpers.R')
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
source('~/Desktop/gENM/src/helpers.R')
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
source('~/Desktop/gENM/src/helpers.R')
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
source('~/Desktop/gENM/src/helpers.R')
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
source('~/Desktop/gENM/src/helpers.R')
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
source('~/Desktop/gENM/src/helpers.R')
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
source('~/Desktop/gENM/src/helpers.R')
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
source('~/Desktop/gENM/src/helpers.R')
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2099, gc=clust)
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
source('~/Desktop/gENM/src/helpers.R')
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2050, gc=clust)
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2099, gc=clust)
source('~/Desktop/gENM/src/helpers.R')
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2099, gc=clust)
source('~/Desktop/gENM/src/helpers.R')
gDensCurv(x=gsp, p=mintemp.2006, pr=mintemp.2099, gc=clust)
kw[1]
kw[2]
kw[3]
kw[4]
kw[1]
kw[10]
kw[1]
kw[1]
kw[1]
kw[1]
length(gene)
length(year)
length(author)
length(kw)
length(review)
length(gene)
length(title)
head(out)
kw[grepl("FALSE", kw)]
kw[grepl("FALSE", kw)]
kw[grepl("FALSE", kw)]
out <- out[order(as.numeric(out[, "year"]),]
head(out)
head(out)
gene
sum(gen)
sum(gene)
sum(gene)
sum(review)
sum(gene)
q()
n
rmarkdown::render("report_biblio.Rmd")
q()
n
