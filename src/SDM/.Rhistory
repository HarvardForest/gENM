require(maptools)
require(maptools)
require(maptools)
require(maps)
install.packages(ggmap)
install.packages("ggplot2")
install.packages(ggmap)
install.packages("ggmap")
library(ggmap)
library(ggplot2)
require(maps)
require(maptools)
install.packages("maptools")
install.packages("mapdata")
install.packages("mapproj")
install.packages("mapdata")
install.packages("sp")
install.packages("maptools")
install.packages("dismo")
require(mapproj)
require(mapdata)
require(maptools)
require(dismo)
locs = read.csv(file="JoTrPresence02202008.txt", header=T, sep="\t")
install.packages("JoTrPresence02202008.txt")
locs = read.csv(file="JoTrPresence02202008.txt", header=T, sep="\t")
locs = read.csv (file="JoTrPresence02202008.txt", header=T, sep="\t")
install.packages("JoTrPresence02202008.txt")
source('~/Desktop/gENM/src/SDM/SDM_Joshua_Trees.R')
source('~/Desktop/gENM/src/SDM/SDM_Joshua_Trees.R')
setwd("/Users/annacalderon/desktop/gENM/src/SDM")
source('~/Desktop/gENM/src/SDM/SDM_Joshua_Trees.R')
me = maxent(BClim, p=train_p, a=train_a)
me
e = evaluate(test_p, test_a, me, BClim)
e
group_p = kfold(Ybrev_bc, 6) # vector of group assignments splitting the Ybrev_bc into 5 groups
group_a = kfold(bg_bc, 6) # ditto for bg_bc
#Building your species distribution models.
test=3
train_p = Ybrev_bc[group_p!=test, c("lon","lat")]
train_a = bg_bc[group_a!=test, c("lon","lat")]
test_p = Ybrev_bc[group_p==test, c("lon","lat")]
test_a = bg_bc[group_a==test, c("lon","lat")]
me = maxent(BClim, p=train_p, a=train_a)
e = evaluate(test_p, test_a, me, BClim)
e
group_p = kfold(Ybrev_bc, 5) # vector of group assignments splitting the Ybrev_bc into 5 groups
group_a = kfold(bg_bc, 5) # ditto for bg_bc
#Building your species distribution models.
test=3
train_p = Ybrev_bc[group_p!=test, c("lon","lat")]
train_a = bg_bc[group_a!=test, c("lon","lat")]
test_p = Ybrev_bc[group_p==test, c("lon","lat")]
test_a = bg_bc[group_a==test, c("lon","lat")]
me = maxent(BClim, p=train_p, a=train_a)
e = evaluate(test_p, test_a, me, BClim)
e
test=2
train_p = Ybrev_bc[group_p!=test, c("lon","lat")]
train_a = bg_bc[group_a!=test, c("lon","lat")]
test_p = Ybrev_bc[group_p==test, c("lon","lat")]
test_a = bg_bc[group_a==test, c("lon","lat")]
me = maxent(BClim, p=train_p, a=train_a)
e = evaluate(test_p, test_a, me, BClim)
e
test=20
train_p = Ybrev_bc[group_p!=test, c("lon","lat")]
train_a = bg_bc[group_a!=test, c("lon","lat")]
test_p = Ybrev_bc[group_p==test, c("lon","lat")]
test_a = bg_bc[group_a==test, c("lon","lat")]
me = maxent(BClim, p=train_p, a=train_a)
e = evaluate(test_p, test_a, me, BClim)
e
#Building your species distribution models.
test=5
train_p = Ybrev_bc[group_p!=test, c("lon","lat")]
train_a = bg_bc[group_a!=test, c("lon","lat")]
test_p = Ybrev_bc[group_p==test, c("lon","lat")]
test_a = bg_bc[group_a==test, c("lon","lat")]
me = maxent(BClim, p=train_p, a=train_a)
e = evaluate(test_p, test_a, me, BClim)
e
#Building your species distribution models.
test=5
train_p = Ybrev_bc[group_p!=test, c("lon","lat")]
train_a = bg_bc[group_a!=test, c("lon","lat")]
test_p = Ybrev_bc[group_p==test, c("lon","lat")]
test_a = bg_bc[group_a==test, c("lon","lat")]
me = maxent(BClim, p=train_p, a=train_a)
e = evaluate(test_p, test_a, me, BClim)
e
#Building your species distribution models.
test=1
train_p = Ybrev_bc[group_p!=test, c("lon","lat")]
train_a = bg_bc[group_a!=test, c("lon","lat")]
test_p = Ybrev_bc[group_p==test, c("lon","lat")]
test_a = bg_bc[group_a==test, c("lon","lat")]
me = maxent(BClim, p=train_p, a=train_a)
e = evaluate(test_p, test_a, me, BClim)
e
#Building your species distribution models.
test=0
train_p = Ybrev_bc[group_p!=test, c("lon","lat")]
train_a = bg_bc[group_a!=test, c("lon","lat")]
test_p = Ybrev_bc[group_p==test, c("lon","lat")]
test_a = bg_bc[group_a==test, c("lon","lat")]
me = maxent(BClim, p=train_p, a=train_a)
e = evaluate(test_p, test_a, me, BClim)
e
#Building your species distribution models.
test=7
train_p = Ybrev_bc[group_p!=test, c("lon","lat")]
train_a = bg_bc[group_a!=test, c("lon","lat")]
test_p = Ybrev_bc[group_p==test, c("lon","lat")]
test_a = bg_bc[group_a==test, c("lon","lat")]
me = maxent(BClim, p=train_p, a=train_a)
e = evaluate(test_p, test_a, me, BClim)
e
pred_me = predict(me, BClim) # generate the predictions
# make a nice plot
plot(pred_me, 1, cex=0.5, legend=T, mar=par("mar"), xaxt="n", yaxt="n", main="Predicted Presence of Joshua trees")
map("state", xlim=c(-119, -113), ylim=c(33.5, 38), fill=F, col="cornsilk", add=T)
map("state", xlim=c(-119, -113), ylim=c(33.5, 38), fill=F, col="slateblue", add=T)
map("state", xlim=c(-119, -113), ylim=c(33.5, 38), fill=F, col="black", add=T)
map("state", xlim=c(-119, -113), ylim=c(33.5, 38), fill=F, col="black", add=T)
text(x=-117.5, y=35.5, "California", col="black", cex=1)
text(x=-116, y=37.5, "Nevada", col="black", cex=1)
text(x=-113, y=34.5, "Arizona", col="black", cex=1)
text(x=-113, y=37.75, "Utah", col="black", cex=1)
points(pts, pch=20, cex=0.5, col="darkgreen")
points(locs$longitude, locs$latitude, col="slateblue4", pch=20, cex=0.5)
points(locs$longitude, locs$latitude, col="darkblue", pch=20, cex=0.5)
points(bg, cex=0.5, col="darkorange3")
points(locs$longitude, locs$latitude, col="darkgreen", pch=20, cex=0.5)
test=7
train_p = Ybrev_bc[group_p!=test, c("lon","lat")]
train_a = bg_bc[group_a!=test, c("lon","lat")]
test_p = Ybrev_bc[group_p==test, c("lon","lat")]
test_a = bg_bc[group_a==test, c("lon","lat")]
me = maxent(BClim, p=train_p, a=train_a)
e = evaluate(test_p, test_a, me, BClim)
e
pred_me = predict(me, BClim) # generate the predictions
# make a nice plot
plot(pred_me, 1, cex=0.5, legend=T, mar=par("mar"), xaxt="n", yaxt="n", main="Predicted Presence of Joshua trees")
map("state", xlim=c(-119, -113), ylim=c(33.5, 38), fill=F, col="black", add=T)
# state names
text(x=-117.5, y=35.5, "California", col="black", cex=1)
text(x=-116, y=37.5, "Nevada", col="black", cex=1)
text(x=-113, y=34.5, "Arizona", col="black", cex=1)
text(x=-113, y=37.75, "Utah", col="black", cex=1)
# presence points
points(locs$longitude, locs$latitude, col="darkgreen", pch=20, cex=0.5)
# and the pseudo-absence points
points(bg, cex=0.5, col="darkorange3")
# add axes
axis(1,las=1)
axis(2,las=1)
box()
